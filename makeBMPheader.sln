char header[54] = { 0x42, 0x4D, 0x38, 0x90, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0xC8, 0xFB, 0xFF, 0xFF, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x24, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

unsigned long long pow(int a, int n)
{
	if (n == 0) return 1;
	else return a * pow(a, n - 1);
}
vector<int> DtoHbyLIn(unsigned long long dec, int maxcnt, int isMinus)
{
	int cnt = 0;

	if (isMinus) dec = pow(16, maxcnt * 2) - dec;
	vector<int> hex;
	hex.resize(maxcnt);

	while (cnt < maxcnt)
	{
		hex[cnt++] = dec % 256;
		dec /= 256;
	}

	return hex;
}
void makeBMPheader(FILE* fp, int width, int height, int bitCount)
{
	unsigned long long dec = width * height * bitCount / 8;
	char hexbuf2[2];
	char hexbuf4[4];

	putc(0x42, fp); putc(0x4D, fp); 
	for (int i = 0; i < 4; i++) putc(DtoHbyLIn(dec, 4, 0)[i], fp);
	for (int i = 6; i < 18; i++) putc(header[i], fp);
	for (int i = 0; i < 4; i++) putc(DtoHbyLIn(width, 4, 0)[i], fp);
	for (int i = 0; i < 4; i++) putc(DtoHbyLIn(height, 4, 1)[i], fp);
	putc(0x01, fp); putc(0x00, fp);
	for (int i = 0; i < 2; i++) putc(DtoHbyLIn(bitCount, 2, 0)[i], fp);
	for (int i = 30; i < 54; i++) putc(header[i], fp);

	return;
}

int main(void)
{
	FILE* fp = fopen("MSImage.bmp", "wb");

	if (FORMATINFO == CF_BITMAP)
	{
		if (OpenClipboard(NULL))
		{
			BMP = (HBITMAP)GetClipboardData(FORMATINFO);
			if (BMP != NULL)
			{
				GetObject(BMP, sizeof(BITMAP), &BMPINFO);

				IMG.Create(BMPINFO.bmWidth, BMPINFO.bmHeight, BMPINFO.bmBitsPixel);
				h_dc = CreateCompatibleDC(NULL);
				SelectObject(h_dc, BMP);
				BitBlt(IMG.GetDC(), 0, 0, BMPINFO.bmWidth, BMPINFO.bmHeight, h_dc, 0, 0, SRCCOPY);
				printf("%d %d %d", BMPINFO.bmWidth, BMPINFO.bmHeight, BMPINFO.bmBitsPixel);

				makeBMPheader(fp, BMPINFO.bmWidth, BMPINFO.bmHeight, BMPINFO.bmBitsPixel);

				for (int i = 0; i < BMPINFO.bmHeight; i++)
				{
					for (int j = 0; j < BMPINFO.bmWidth; j++)
					{
						BGR = IMG.GetPixel(j, i);
						putc(GetBValue(BGR), fp);
						putc(GetGValue(BGR), fp);
						putc(GetRValue(BGR), fp);
						putc(0x00, fp);
					}
				}
			}

			IMG.ReleaseDC();
			DeleteDC(h_dc);
		}
		else puts("Failed to open your clipboard, please try again");

		CloseClipboard();
	}
	else puts("Failed to find a *.bmp file from your clipboard, please try again");

	fclose(fp);
	return 0;
}
